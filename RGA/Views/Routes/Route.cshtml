@model RGA.Models.Route

@{
    ViewBag.Title = "Wygenerowana trasa";
}

<h2>Trasa</h2>

<div>
    <h4>Szczegóły trasy</h4>
    <hr />
    <dl class="dl-horizontal">
        
        <dt>
            @Html.DisplayNameFor(model => model.Worker)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Worker.UserName)
        </dd>
        

        <dt>
            @Html.DisplayNameFor(model => model.Driver)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Driver.UserName)
        </dd>





        <dt>
            @Html.DisplayNameFor(model => model.DynamicMapHtml)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DynamicMapHtml)
        </dd>
        
        

        <dt>
            @Html.DisplayNameFor(model => model.StartAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Shipments)
        </dt>
        
        @foreach (var shipment in Model.Shipments)
        {
            <dd>
                @Html.DisplayFor(m=> shipment.DestinationAddress)
            </dd>
        }
        


        <dt>
            @Html.DisplayNameFor(model => model.EndAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndAddress)
        </dd>
        

        <dt>
            @Html.DisplayNameFor(model => model.Image)
        </dt>

        <dd>
            <img src="@string.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(Model.Image))"/>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Summary)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Summary)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDateTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDateTime)
        </dd>



        <dt>
            @Html.DisplayNameFor(model => model.Duaration)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Duaration)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Distance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Distance)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RouteOptimizationAlgorithm)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RouteOptimizationAlgorithm)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RouteOptimizationProvider)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RouteOptimizationProvider)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RouteOptimizationType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RouteOptimizationType)
        </dd>

    </dl>
</div>
<p>
    @*Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")*@
</p>
